# Default values for surf-ais-screenshot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ais: {}
#  username: username
#  password: password

volume:
  size: 100M

nameOverride: ""
fullnameOverride: ""

job:
  schedule: 0 * * * *
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  backoffLimit: 2
  image:
    name: tons/surf-ais-screenshot:1.0.0
    pullPolicy: IfNotPresent

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

nginx:
  defaultConf: includes/etc/nginx/conf.d/default.conf
  image:
    name: nginxinc/nginx-unprivileged:1.18
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    hostname: surf-ais-screenshot.127.0.0.1.nip.io
    #  certIssuer: letsencrypt-staging | letsencrypt-prod
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  replicaCount: 1
  podAnnotations: {}
  imagePullSecrets: []
  podSecurityContext: { }
  # fsGroup: 2000
  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

selenium:
  image:
    name: selenium/standalone-chrome:4.0.0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 4444
  podAnnotations: {}
  imagePullSecrets: []
  podSecurityContext: {}
  # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
